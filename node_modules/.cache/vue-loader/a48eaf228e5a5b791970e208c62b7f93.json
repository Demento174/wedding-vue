{"remainingRequest":"/home/demento/Yandex.Disk/Work/localhost/Volt/wedding.victoria.ru/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/demento/Yandex.Disk/Work/localhost/Volt/wedding.victoria.ru/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/demento/Yandex.Disk/Work/localhost/Volt/wedding.victoria.ru/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/demento/Yandex.Disk/Work/localhost/Volt/wedding.victoria.ru/src/components/Calculator.vue?vue&type=template&id=e835979c&","dependencies":[{"path":"/home/demento/Yandex.Disk/Work/localhost/Volt/wedding.victoria.ru/src/components/Calculator.vue","mtime":1601115621447},{"path":"/home/demento/Yandex.Disk/Work/localhost/Volt/wedding.victoria.ru/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/demento/Yandex.Disk/Work/localhost/Volt/wedding.victoria.ru/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/demento/Yandex.Disk/Work/localhost/Volt/wedding.victoria.ru/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/demento/Yandex.Disk/Work/localhost/Volt/wedding.victoria.ru/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJzZWN0aW9uIiwgeyBzdGF0aWNDbGFzczogImNhbGN1bGF0aW9uIiwgYXR0cnM6IHsgaWQ6IF92bS5pZCB9IH0sIFsKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udGFpbmVyIiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsKICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgdmFsdWU6IF92bS50aXRsZSwKICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ0aXRsZSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29sLTEyIgogICAgICAgICAgfSwKICAgICAgICAgIFtfYygiaDIiLCBbX3ZtLl92KF92bS5fcyhfdm0udGl0bGUpKV0pXQogICAgICAgICksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtMTIiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYmxvY2siIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpdGVtIG9uZSIgfSwgWwogICAgICAgICAgICAgIF9jKCJsYWJlbCIsIFsKICAgICAgICAgICAgICAgIF92bS5fdigiINCa0L7Qu9C40YfQtdGB0YLQstC+INCz0L7RgdGC0LXQuSAiKSwKICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmd1ZXN0c01vZGVsLAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImd1ZXN0c01vZGVsIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAibnVtYmVyIiwKICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogX3ZtLmd1ZXN0X21pbiwKICAgICAgICAgICAgICAgICAgICBtaW46IF92bS5ndWVzdF9taW4sCiAgICAgICAgICAgICAgICAgICAgbWF4OiBfdm0uZ3Vlc3RfbWF4LAogICAgICAgICAgICAgICAgICAgIGlkOiAicGVvcGxlX3RleHQiCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uZ3Vlc3RzTW9kZWwgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IF92bS5jYWxjdWxhdGUsCiAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgX3ZtLmd1ZXN0c01vZGVsID0gJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5ndWVzdHNNb2RlbCwKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJndWVzdHNNb2RlbCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogInJhbmdlIiwKICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogX3ZtLmd1ZXN0X21pbiwKICAgICAgICAgICAgICAgICAgICBtaW46IF92bS5ndWVzdF9taW4sCiAgICAgICAgICAgICAgICAgICAgbWF4OiBfdm0uZ3Vlc3RfbWF4LAogICAgICAgICAgICAgICAgICAgIGlkOiAicGVvcGxlIgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLmd1ZXN0c01vZGVsIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBfdm0uY2FsY3VsYXRlLAogICAgICAgICAgICAgICAgICAgIF9fcjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0uZ3Vlc3RzTW9kZWwgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJsYWJlbCIsIFsKICAgICAgICAgICAgICAgIF92bS5fdigiINCS0YvQsdC10YDQuNGC0LUg0YHRgNC10LTQvdC40Lkg0YfQtdC6INC90LAg0LPQvtGB0YLRjyAiKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAic2VsZWN0IiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmNoZWNrTW9kZWwsCiAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJjaGVja01vZGVsIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICIxaHVtYW5fcHJpY2UiIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogWwogICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgJCRzZWxlY3RlZFZhbCA9IEFycmF5LnByb3RvdHlwZS5maWx0ZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jYWxsKCRldmVudC50YXJnZXQub3B0aW9ucywgZnVuY3Rpb24obykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gby5zZWxlY3RlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24obykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsID0gIl92YWx1ZSIgaW4gbyA/IG8uX3ZhbHVlIDogby52YWx1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5jaGVja01vZGVsID0gJGV2ZW50LnRhcmdldC5tdWx0aXBsZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAkJHNlbGVjdGVkVmFsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICQkc2VsZWN0ZWRWYWxbMF0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmNhbGN1bGF0ZQogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5jaGVja3MsIGZ1bmN0aW9uKGNoZWNrKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKCJvcHRpb24iLCB7IGRvbVByb3BzOiB7IHZhbHVlOiBjaGVjayB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoY2hlY2spICsgIiDRgNGD0LEuL9GH0LXQuy4iKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAwCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImxhYmVsIiwgeyBzdGF0aWNDbGFzczogImRhdGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiINCU0LDRgtCwINGC0L7RgNC20LXRgdGC0LLQsCAiKSwKICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmRhdGVNb2RlbCwKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJkYXRlTW9kZWwiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAiZGF0ZSIsIG1pbjogX3ZtLnRvZGF5LCBpZDogImRhdGVfd2VkZGluZyIgfSwKICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5kYXRlTW9kZWwgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5jaGFuZ2VEYXRlKF92bS5kYXRlTW9kZWwpCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICBfdm0uZGF0ZU1vZGVsID0gJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpdGVtIHR3byIgfSwgWwogICAgICAgICAgICAgIF9jKCJoNiIsIFtfdm0uX3YoItCa0LDQutC40LUg0YHQstCw0LTQtdCx0L3Ri9C1INGD0YHQu9GD0LPQuCDQv9C+0YLRgNC10LHRg9GO0YLRgdGPIildKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImJveCBzaGFkb3dfd3JhcHBlciIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uc2hhZG93LAogICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJzaGFkb3ciCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInNoYWRvdyIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgItCy0YvQsdC10YDQuNGC0LUg0L/RgNC40LzQtdGA0L3Rg9GOINC00LDRgtGDINGC0L7RgNC20LXRgdGC0LLQsCDQvtGCINGN0YLQvtCz0L4g0LfQsNCy0LjRgdC40YIg0JLQsNGIINC/0L7QtNCw0YDQvtC6IgogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5zZXJ2aWNlcywgZnVuY3Rpb24oc2VydmljZSwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJibCIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uc2VydmljZXNNb2RlbCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJzZXJ2aWNlc01vZGVsIgogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiAic2VydmljZSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHJlZkluRm9yOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNoZWNrYm94LWN1c3RvbSBkb3BzX2JveCIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJjaGVja2JveC0iICsgaW5kZXgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogImNoZWNrYm94IiwKICAgICAgICAgICAgICAgICAgICAgICAgICBwcmljZVByZXNlbnQ6IHNlcnZpY2UucHJpY2VQcmVzZW50LnNpbXBsZSwKICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogc2VydmljZS50aXRsZSwKICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW50OiAiZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlcnZpY2UucHJpY2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZDogQXJyYXkuaXNBcnJheShfdm0uc2VydmljZXNNb2RlbCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX3ZtLl9pKF92bS5zZXJ2aWNlc01vZGVsLCBzZXJ2aWNlLnByaWNlKSA+IC0xCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5zZXJ2aWNlc01vZGVsCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyICQkYSA9IF92bS5zZXJ2aWNlc01vZGVsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQkZWwgPSAkZXZlbnQudGFyZ2V0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQkYyA9ICQkZWwuY2hlY2tlZCA/IHRydWUgOiBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSgkJGEpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyICQkdiA9IHNlcnZpY2UucHJpY2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkJGkgPSBfdm0uX2koJCRhLCAkJHYpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCQkZWwuY2hlY2tlZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCRpIDwgMCAmJgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoX3ZtLnNlcnZpY2VzTW9kZWwgPSAkJGEuY29uY2F0KFskJHZdKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCRpID4gLTEgJiYKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKF92bS5zZXJ2aWNlc01vZGVsID0gJCRhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNsaWNlKDAsICQkaSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY29uY2F0KCQkYS5zbGljZSgkJGkgKyAxKSkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5zZXJ2aWNlc01vZGVsID0gJCRjCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uY2hhbmdlU2VyaXZjZQogICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImxhYmVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY2hlY2tib3gtY3VzdG9tLWxhYmVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBmb3I6ICJjaGVja2JveC0iICsgaW5kZXggfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KF92bS5fcyhzZXJ2aWNlLnRpdGxlKSldKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlLnNpZ25hdHVyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJjaGVja2JveC10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgItC+0YIgIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhzZXJ2aWNlLnByaWNlKSArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIgIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhzZXJ2aWNlLnNpZ25hdHVyZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImNoZWNrYm94LXRleHQiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoItC+0YIgIiArIF92bS5fcyhzZXJ2aWNlLnByaWNlKSArICIg0YDRg9CxLiIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0bl9yZWNlaXZlX2dpZnQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBkaXNwbGF5OiAibm9uZSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZ2V0U2VydmljZVByZXNlbnQoJGV2ZW50KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoItCf0L7Qu9GD0YfQuNGC0Ywg0LIg0L/QvtC00LDRgNC+0LoiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbSgwLCB0cnVlKQogICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAyCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImJsb2NrLWNvbG9yIHNoYWRvd193cmFwcGVyIiB9LCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNoYWRvdywKICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAic2hhZG93IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzaGFkb3ciCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygic3BhbiIsIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICLQstGL0LHQtdGA0LjRgtC1INC/0YDQuNC80LXRgNC90YPRjiDQtNCw0YLRgyDRgtC+0YDQttC10YHRgtCy0LAg0L7RgiDRjdGC0L7Qs9C+INC30LDQstC40YHQuNGCINCS0LDRiCDQv9C+0LTQsNGA0L7QuiIKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbSBvbmUiIH0sIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImJveC1zdWl0LXlvdSIgfSwgWwogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIiIH0sIFsKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICAgICAgICAgICAiY29sLTEyIGNvbC1zbS0xMiBjb2wtbWQtMTIgY29sLWxnLTYgY29sLXhsLTYiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInN1aXQteW91IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImg2IiwgW192bS5fdigi0JLQsNGIINCx0Y7QtNC20LXRgiIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHJlZjogImVsZW1lbnRSZXN1bHQiLCBhdHRyczogeyBpZDogInJlc3VsdCIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MoX3ZtLnJlc3VsdE1vZGVsKSldCiAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiDRgNGD0LEuICIpLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ucmVzdWx0TW9kZWwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInJlc3VsdE1vZGVsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImhpZGRlbiIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ucmVzdWx0TW9kZWwgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0ucmVzdWx0TW9kZWwgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgICAgICAgImNvbC0xMiBjb2wtc20tMTIgY29sLW1kLTEyIGNvbC1sZy02IGNvbC14bC02IgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzdWl0LXlvdSIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJoNiIsIFtfdm0uX3YoItCS0LDQvCDQv9C+0LTQvtC50LTQtdGCIildKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyByZWY6ICJoYWxscyIsIHN0YXRpY0NsYXNzOiAiaGFsbHMiIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInByZXNlbnRzIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaDYiLCBbX3ZtLl92KCLQktGLINC/0L7Qu9GD0YfQsNC10YLQtSDQv9C+0LTQsNGA0LrQuCDQvtGCINC+0YLQtdC70Y8gwqtWaXNpb27CuyIpXSksCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyByZWY6ICJwcmVzZW50c0xpc3QiLCBzdGF0aWNDbGFzczogImdpZnQtbGlzdCIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImdpZnQiLCBhdHRyczogeyAiZGF0YS1pZCI6ICIiIH0gfSkKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbSB0d28iIH0sIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJmb3JtIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzZW5kZm9ybSIsCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgc3VibWl0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpCiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNlbmRFbWFpbCgkZXZlbnQpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiaDUiLCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgJ9Cl0L7RgtC40YLQtSDQvtCx0YHRg9C00LjRgtGMINGN0YLQviDRgdC+INGB0LLQsNC00LXQsdC90YvQvCDQvNC10L3QtdC00LbQtdGA0L7QvCDQvtGC0LXQu9GPICJWaXNpb24iPycKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjYWxjdWxhdGlvbl9waG9uZSIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAi0JLQsNGIINC60L7QvdGC0LDQutGC0L3Ri9C5INGC0LXQu9C10YTQvtC9IiwKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJwaG9uZSIsCiAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogIiIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzZW5kX2Zvcm0iLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAic3VibWl0IiwKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAi0JTQsCwg0L/QtdGA0LXQt9Cy0L7QvdC40YLQtSDQvNC90LUiLAogICAgICAgICAgICAgICAgICAgICAgImRhdGEtZm9ybSI6ICJjYWxjdWxhdGlvbiIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImhpZGRlbiIsIG5hbWU6ICJibG9jayIsIHZhbHVlOiAiY2FsbG1lIiB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfYygiaDQiLCB7IHN0YXRpY0NsYXNzOiAibW9kYWwtdGl0bGUgZm9ybV9jb21wbGVhdGUiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5mb3JtQ29tcGxlYXRlKSkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKAogICAgICAiZGl2IiwKICAgICAgeyBzdGF0aWNDbGFzczogInRvb2x0aXAgdG9wX3Rvb2x0aXAiLCBzdGF0aWNTdHlsZTogeyBkaXNwbGF5OiAibm9uZSIgfSB9LAogICAgICBbCiAgICAgICAgX3ZtLl92KCIg0K3RgtGDINGD0YHQu9GD0LPRgyDQstGLINC80L7QttC10YLQtSDQv9C+0LvRg9GH0LjRgtGMINCyINC/0L7QtNCw0YDQvtC6INC/0YDQuCDRgdGD0LzQvNC1INC+0YIiKSwKICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiNzAwMDAiKV0pLAogICAgICAgIF92bS5fdigiLNCS0Ysg0LzQvtC20LXRgtC1INGD0LHRgNCw0YLRjCDQs9Cw0LvQvtGH0LrRgyDQuCDRg9Cy0LXQu9C40YfQuNGC0Ywg0YHQstC+0Lkg0LHRjtC00LbQtdGCINC90LAgIiksCiAgICAgICAgX2MoInN0cm9uZyIpLAogICAgICAgIF92bS5fdigi4oK9ICIpCiAgICAgIF0KICAgICkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}